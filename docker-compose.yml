version: "3"
services:
  db:
    platform: linux/x86_64
    image: mysql:9.0.0
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - 3306:3306
    healthcheck:
      # not `mysqladmin ping` because tcp port will open after start
      test: printf "GET / HTTP/1.1\n\n" > /dev/tcp/127.0.0.1/3306
      interval: 5s
      timeout: 1s
      retries: 20
  cache:
    image: redis:7.0.5-alpine3.16
    container_name: cache
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD}"
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 1s
      retries: 5
  zookeeper:
    image: bitnami/zookeeper:3.9.2
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    healthcheck:
      test: nc -z localhost 2181
      interval: 5s
      timeout: 1s
      retries: 10
  queue:
    image: bitnami/kafka:3.7.1
    container_name: queue
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - 9092:9092
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092
      interval: 30s
      timeout: 30s
      retries: 4
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
  app:
    image: backend
    build: .
    container_name: app
    entrypoint: ["main", "app"]
    ports:
      - 8080:8080
      - 8888:8888
    environment:
      MYSQL_DB_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DBARGS: charset=utf8&parseTime=True&loc=Local
      KAFKA_HOST: queue
    restart: on-failure:10
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy
  auth:
    image: backend
    build: .
    container_name: auth
    entrypoint: ["main", "auth"]
    ports:
      - 8081:8080
      - 8889:8888
    environment:
      REDIS_HOST: cache
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    restart: on-failure:10
    depends_on:
      cache:
        condition: service_healthy
  mail:
    image: backend
    build: .
    container_name: mail
    entrypoint: ["main", "mail"]
    ports:
      - 8890:8888
    environment:
      KAFKA_HOST: queue
      MAIL_HOST: mailhog
    restart: on-failure:10
    depends_on:
      queue:
        condition: service_healthy
      mailhog:
        condition: service_started
  jaeger:
    image: jaegertracing/all-in-one:1.58
    container_name: jaeger
    ports:
      - 16686:16686
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus/
